#!/bin/bash -e

#set -x  # uncomment for debugging

if [ -z "$GP_GUTENPRINT_SRC" ]; then
  echo "Must set \$GP_GUTENPRINT_SRC to directory of Gutenprint release source"
  exit 1
fi

if [ -z "$GP_LIBUSB_SRC" ]; then
  echo "Must set \$GP_LIBUSB_SRC to directory of libusb release source"
  exit 1
fi

for version in $*; do
  #
  # Compute configure flags and architectures depending on version.
  #

  case $version in
    10.4)
      configure_flags="--without-doc --enable-cups-ppds --without-libiconv-prefix"
      # cflags="-arch ppc -arch i386 -mmacosx-version-min=$version"
      cflags="-arch ppc -mmacosx-version-min=$version"
      ldflags=$cflags
      ;;
    10.5)
      configure_flags="--without-doc"
      cflags="-arch ppc -arch i386 -arch x86_64 -mmacosx-version-min=$version"
      ldflags=$cflags
      ;;
    10.6)
      cflags="-arch i386 -arch x86_64 -mmacosx-version-min=$version"
      ldflags=$cflags
      ;;
    *)
      echo "Don't know how to build for version '$version'"
      exit 1
  esac

  #
  # Set up pathnames.
  #
  # Note that we build in /tmp so that most of the I/O is local, and only the
  # 'make install' step may copy over the network.
  #

  build_dir="$PWD/build/$version"
  gutenprint_src_dir="/tmp/gutenprint-$version"
  libusb_src_dir="/tmp/libusb-$version"
  install_dir="$build_dir/install"

  #
  # Initialize build & install directories.
  #

  rm -rf "$build_dir"
  mkdir -p "$install_dir"

  #
  # Build libusb.
  #

  echo "Building libusb for $version..."

  rm -rf "$libusb_src_dir"
  cp -pR "$GP_LIBUSB_SRC" "$libusb_src_dir"

  (set -x;
   cd "$libusb_src_dir";
   CFLAGS="$cflags" LDFLAGS="$ldflags" ./configure --prefix=/usr/share/gutenprint/libusb --disable-dependency-tracking;
   make install DESTDIR="$install_dir") 1>"$build_dir/libusb.build.log" 2>&1

  if [ $? == 0 ]; then
    echo "Build of libusb for $version succeeded."
  else
    echo "Build of libusb may have failed -- check details in $build_dir/libusb.build.log"
    exit 1
  fi

  #
  # Build Gutenprint.
  #

  echo "Building Gutenprint for $version..."

  rm -rf "$gutenprint_src_dir"
  cp -pR "$GP_GUTENPRINT_SRC" "$gutenprint_src_dir"

  (set -x;
   cd "$gutenprint_src_dir";
   export PKG_CONFIG_PATH="$install_dir/usr/share/gutenprint/libusb/lib/pkgconfig";
   export PKG_CONFIG_SYSROOT_DIR="$install_dir";
   CFLAGS="$cflags" LDFLAGS="$ldflags" ./configure --prefix=/usr --disable-dependency-tracking $configure_flags;
   make install DESTDIR="$install_dir") 1>"$build_dir/gutenprint.build.log" 2>&1

  if [ $? == 0 ]; then
    echo "Build of Gutenprint for $version succeeded."
  else
    echo "Build of gutenprint may have failed -- check details in $build_dir/gutenprint.build.log"
    exit 1
  fi
done